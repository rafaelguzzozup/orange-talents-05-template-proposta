spring.datasource.url=jdbc:mysql://${HOST_URL:localhost:3306}/proposta?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&useTimeZone=true&serverTimezone=UTC
spring.datasource.username=${JDBC_DATABASE_USERNAME:root}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:agbdlcid}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql:true
spring.jpa.format-sql:true

## Hibernate Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
#prometheus
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

#feign
api.analise.financeira=${API_ANALISE_FINANCEIRA:http://localhost:9999}
api.cartoes=${API_CARTOES:http://localhost:8888}

#schedule
periodicidade.associa-cartao-proposta=${TEMPO_ASSOCIA_CARTAO_PROPOSTA:60000}
periodicidade.atualiza-status-proposta=${TEMPO_ATUALIZA_STATUS_PROPOSTA:95000}
periodicidade.notifica-bloqueio-cartao=${TEMPO_NOTIFICA_BLOQUEIO-CARTAO:95000}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/app-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/app-proposta/protocol/openid-connect/certs}


# Jaeger - Habilita ou nao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do servico
opentracing.jaeger.service-name=${spring.application.name:propostas}
# Jaeger - Endereco para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilistico) e sua configuracao (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
